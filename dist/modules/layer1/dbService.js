"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:true});exports.init=init;exports.getDb=getDb;const luxon_1=require("luxon");const knex_1=require("knex");const fs_1=__importDefault(require("fs"));const path_1=__importDefault(require("path"));let __db;function init(config){__db=(0,knex_1.knex)({dialect:"postgres",client:"pg",connection:{host:config.connection.host,port:config.connection.port,database:config.connection.database,user:config.connection.user,password:config.connection.password,ssl:{rejectUnauthorized:true,ca:fs_1.default.readFileSync(path_1.default.join("config","ssl","global-bundle.pem")).toString()}},pool:{min:config.pool.min,max:config.pool.max,idleTimeoutMillis:1500}});__db.on("query",(data=>{if(config.debugMode){console.log(`[${data.__knexQueryUid??data.__knexTxId}] Running query.`)}}));__db.on("query-response",((response,data)=>{if(config.debugMode){console.log(`[${data.__knexQueryUid??data.__knexTxId}] Query complete.`)}}));__db.on("query-error",((error,object)=>{console.error(`[${luxon_1.DateTime.now().toISO()}] Encountered query-error event.`);console.error("error: ");console.error(error);console.error("object: ");console.error(object)}));if(config.debugMode){__db.on("query",(data=>{console.log(data)}))}}function getDb(){if(!__db){throw new Error("DATABASE_NOT_INITIALIZED")}return __db}