"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:true});exports.init=init;exports.getPubSub=getPubSub;exports.iterator2Iterable=iterator2Iterable;exports.withFilter2Iterable=withFilter2Iterable;const lodash_1=__importDefault(require("lodash"));const graphql_redis_subscriptions_1=require("graphql-redis-subscriptions");const ioredis_1=__importDefault(require("ioredis"));const graphql_subscriptions_1=require("graphql-subscriptions");let __config=null;let __pubSub=null;function __getConfigAndPubSub(){if(!__config||!__pubSub){throw new Error("MODULE_NOT_INITIALIZED: pubSub")}return{config:__config,pubSub:__pubSub}}function init(config){__config=config;const elastiCache=__config.aws.elastiCache;if(elastiCache&&(elastiCache.path||elastiCache.host&&elastiCache.port)){const options={connectTimeout:17e3,maxRetriesPerRequest:4,retryStrategy:times=>Math.min(times*50,2e3),reconnectOnError:error=>{const targets=[/READONLY/,/ETIMEDOUT/];return lodash_1.default.some(targets,(target=>target.test(error.message)))}};if(elastiCache.host){options.host=elastiCache.host}if(elastiCache.port){options.port=elastiCache.port}if(elastiCache.enableTls){options.tls={}}const path=elastiCache.path;__pubSub=new graphql_redis_subscriptions_1.RedisPubSub({publisher:__newRedisInstance(options,path),subscriber:__newRedisInstance(options,path)})}else{__pubSub=new graphql_subscriptions_1.PubSub}}function __newRedisInstance(options,path){return path?new ioredis_1.default(path,options):new ioredis_1.default(options)}function getPubSub(){const{pubSub:pubSub}=__getConfigAndPubSub();return pubSub}function iterator2Iterable(iterator){return{[Symbol.asyncIterator]:()=>iterator}}function withFilter2Iterable(withFilterReturnValue,parent,variables,context,info){const iterator=withFilterReturnValue(parent,variables,context);return iterator2Iterable(iterator)}