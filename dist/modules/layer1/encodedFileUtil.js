"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||("get"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function(){return m[k]}}}Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:true,value:v})}:function(o,v){o["default"]=v});var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod)if(k!=="default"&&Object.prototype.hasOwnProperty.call(mod,k))__createBinding(result,mod,k);__setModuleDefault(result,mod);return result};var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:true});exports.EncodedFile=void 0;exports.encodeStringAsFile=encodeStringAsFile;const fs_1=__importDefault(require("fs"));const path_1=__importDefault(require("path"));const uuid=__importStar(require("uuid"));const __reHeader=/^(?<filename>.*)\/data:(?<mimeType>.*);base64,/;const __defaultTempDirectory=path_1.default.join("tmp","uploaded");class EncodedFile{constructor(encodedString,tempDirectory){this.encodedFile="";this.tempDirectory=__defaultTempDirectory;this.metadata=null;this.writeToFileSystem=()=>{const match=this.encodedFile.match(__reHeader);if(!match||!match.groups){return null}this.metadata={fullPath:"",filename:match.groups?.filename||"",mimeType:match.groups?.mimeType||"",tempDirectoryName:""};if(!this.metadata.filename||!this.metadata.mimeType){return null}if(this.metadata.filename.indexOf("/")>=0||this.metadata.filename.indexOf("\\")>=0||this.metadata.filename.indexOf("..")>=0){return null}const fileData=this.encodedFile.replace(__reHeader,"");this.metadata.tempDirectoryName=path_1.default.join(this.tempDirectory,uuid.v4());fs_1.default.mkdirSync(this.metadata.tempDirectoryName,{recursive:true});const filePath=path_1.default.join(this.metadata.tempDirectoryName,this.metadata.filename);fs_1.default.writeFileSync(filePath,fileData,"base64");this.metadata.fullPath=filePath;return this.metadata};this.delete=()=>{if(this.metadata&&this.metadata.filename){fs_1.default.unlinkSync(this.metadata.fullPath);fs_1.default.rmdirSync(this.metadata.tempDirectoryName);this.metadata=null}};this.encodedFile=encodedString;if(tempDirectory){this.tempDirectory=tempDirectory}}}exports.EncodedFile=EncodedFile;function encodeStringAsFile(fileName,mimeType,content){const encodedContent=Buffer.from(content).toString("base64");return`${fileName}/data:${mimeType};base64,${encodedContent}`}