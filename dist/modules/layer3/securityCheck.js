"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:true});exports.init=init;exports.checkAndNotifyForMultipleAccessDeniedErrors=checkAndNotifyForMultipleAccessDeniedErrors;const lodash_1=__importDefault(require("lodash"));const layer2_1=require("../layer2");const layer1_1=require("../layer1");const bluebird_1=require("bluebird");let __config=null;function init(config){__config=config}function __getConfig(){if(!__config){throw new Error("MODULE_NOT_INITIALIZED: securityCheck")}return __config}const __maxAllowedErrors=10;const __timeFrameS=60*60;const __timeFrameHours=__timeFrameS/60/60;async function checkAndNotifyForMultipleAccessDeniedErrors(ipAddress,userId,authProviderUserId){const config=__getConfig();const recentErrorIds=await __getRecentErrorIds(ipAddress);if(recentErrorIds.length>__maxAllowedErrors){const mostRecentErrorId=recentErrorIds[0];const emailsConfigValue=await layer2_1.appConfigUtil.getConfigValue("securityCheckEmails");const emails=emailsConfigValue?.emails??[];if(emails.length>0){await bluebird_1.Promise.each(emails,(async email=>{const emailNotificationId=await layer2_1.emailService.fileAndSendNotification({toEmail:email,subject:`Security alert (${config.generalAppName})`,body:__genEmailBody(ipAddress,userId,authProviderUserId,__maxAllowedErrors,__timeFrameHours,mostRecentErrorId)});await __insertRequestAlert({logEntryId:mostRecentErrorId,emailNotificationId:emailNotificationId})}))}else{await __insertRequestAlert({logEntryId:mostRecentErrorId})}}}async function __getRecentErrorIds(ipAddress){const config=__getConfig();const rows=await layer1_1.dbService.getDb().queryBuilder().select({id:"id"}).from(config.tableNames.audit.graphqlQueryLogEntry).where({client_ip_addr:ipAddress||null,has_errors:true}).whereRaw(`(response::jsonb @@ '$.errors[*].message == "ACCESS_DENIED"')`).whereRaw(`(NOW() - interval '${__timeFrameS} seconds' <= meta_created)`).orderBy("meta_created","desc");return lodash_1.default.map(rows,(row=>row.id))}async function __insertRequestAlert({logEntryId:logEntryId,emailNotificationId:emailNotificationId}){const config=__getConfig();await layer1_1.dbService.getDb().queryBuilder().insert({enum_alert_type_name:"multipleAccessDeniedErrors",trigger_log_entry_id:logEntryId,email_notification_id:emailNotificationId??null}).into(config.tableNames.security.requestAlert)}function __genEmailBody(ipAddress,userId,authProviderUserId,maxAllowedErrors,timeFrameHours,graphqlQueryLogEntryId){return""+`${ipAddress?`The IP ${ipAddress}`:"An unknown client"} has caused at least ${maxAllowedErrors} ACCESS_DENIED errors in the last ${timeFrameHours} hour(s). Please investigate.\n\n`+`IP address: ${ipAddress||"(unable to determine)"}\n`+`User ID: ${userId||"(not authenticated)"}\n`+`Auth provider user ID: ${authProviderUserId||"(not authenticated)"}\n\n`+`(Log entry ID: ${graphqlQueryLogEntryId})`}