"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:true});exports.init=init;exports.logInsert=logInsert;exports.logUpdate=logUpdate;exports.logDeletes=logDeletes;exports.logGraphqlQuery=logGraphqlQuery;const lodash_1=__importDefault(require("lodash"));const layer1_1=require("../../../layer1");let __config=null;function init(config){__config=config}function __getConfig(){if(!__config){throw new Error("MODULE_NOT_INITIALIZED: dbUtil/audit")}return __config}async function logInsert({trx:trx,userData:userData,tableName:tableName,inputData:inputData,returnedRowId:returnedRowId}){const config=__getConfig();if(config.disable){return}await trx.queryBuilder().insert({enum_log_type_name:"insert",site_user_id:userData.userId,auth_provider_user_id:userData.authProviderUserId,client_ip_addr:userData.clientIp||null,table_name:tableName,row_id:returnedRowId,data_before:null,data_after:inputData}).into(config.tableNames.audit.logEntry)}async function logUpdate({trx:trx,userData:userData,tableName:tableName,rowId:rowId,oldRow:oldRow,newRow:newRow}){const config=__getConfig();if(config.disable){return}await trx.queryBuilder().insert({enum_log_type_name:"update",site_user_id:userData.userId,auth_provider_user_id:userData.authProviderUserId,client_ip_addr:userData.clientIp||null,table_name:tableName,row_id:rowId,data_before:oldRow,data_after:newRow}).into(config.tableNames.audit.logEntry)}async function logDeletes({trx:trx,userData:userData,tableName:tableName,oldRows:oldRows}){const config=__getConfig();if(config.disable){return}if(oldRows.length>0){await trx.queryBuilder().insert(lodash_1.default.map(oldRows,(oldRow=>({enum_log_type_name:"delete",site_user_id:userData.userId,auth_provider_user_id:userData.authProviderUserId,client_ip_addr:userData.clientIp||null,table_name:tableName,row_id:oldRow["id"],data_before:oldRow,data_after:null})))).into(config.tableNames.audit.logEntry)}}async function logGraphqlQuery({userData:userData,gqlQuery:gqlQuery,gqlVariables:gqlVariables,response:response}){const config=__getConfig();if(config.disable){return}await layer1_1.dbService.getDb().queryBuilder().insert({site_user_id:userData.userId||null,auth_provider_user_id:userData.authProviderUserId,client_ip_addr:userData.clientIp||null,gql_query:gqlQuery,gql_variables:JSON.stringify(gqlVariables),has_errors:!!response?.errors,response:JSON.stringify(response)}).into(config.tableNames.audit.graphqlQueryLogEntry)}